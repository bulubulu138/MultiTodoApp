name: Build and Release

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win
            arch: x64
          - os: macos-latest
            platform: mac
            arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        working-directory: MultiTodoApp
        run: npm ci

      - name: Rebuild native modules (Windows)
        if: matrix.platform == 'win'
        working-directory: MultiTodoApp
        run: npm run rebuild
        env:
          npm_config_msvs_version: 2019

      - name: Rebuild native modules (macOS)
        if: matrix.platform == 'mac'
        working-directory: MultiTodoApp
        run: npm run rebuild

      - name: Verify native modules
        working-directory: MultiTodoApp
        run: npm run verify
        continue-on-error: true

      - name: Build application
        working-directory: MultiTodoApp
        run: npm run build

      - name: Package application (Windows)
        if: matrix.platform == 'win'
        working-directory: MultiTodoApp
        run: npm run dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package application (macOS x64)
        if: matrix.platform == 'mac' && matrix.arch == 'x64'
        working-directory: MultiTodoApp
        run: npm run dist:mac -- --x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.MAC_CERT_P12_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}

      - name: Package application (macOS ARM64)
        if: matrix.platform == 'mac' && matrix.arch == 'arm64'
        working-directory: MultiTodoApp
        run: npm run dist:mac -- --arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.MAC_CERT_P12_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: MultiTodo-Windows-${{ matrix.arch }}
          path: |
            MultiTodoApp/release/*.exe
            MultiTodoApp/release/*.exe.blockmap
          if-no-files-found: error

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: MultiTodo-macOS-${{ matrix.arch }}
          path: |
            MultiTodoApp/release/*.dmg
            MultiTodoApp/release/*.dmg.blockmap
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/MultiTodo-Windows-x64/*.exe
            artifacts/MultiTodo-macOS-x64/*.dmg
            artifacts/MultiTodo-macOS-arm64/*.dmg
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## 📦 安装包下载

            ### Windows
            - `MultiTodo-*-x64-setup.exe` - Windows 64位安装包

            ### macOS
            - `MultiTodo-*-x64.dmg` - macOS Intel芯片安装包
            - `MultiTodo-*-arm64.dmg` - macOS Apple Silicon (M1/M2) 安装包

            ## 🎯 功能特性
            - ✅ 基于关键词的智能待办推荐
            - ✅ 中文分词与TF-IDF算法
            - ✅ 待办关系管理
            - ✅ 富文本编辑器
            - ✅ AI助手配置（支持Kimi/DeepSeek/豆包）
            - ✅ 跨平台支持

            ## 📝 更新日志
            查看 [CHANGELOG.md](./CHANGELOG.md) 了解详细更新内容

            ## ⚠️ 注意事项
            - Windows用户首次安装可能需要允许SmartScreen
            - macOS用户需要在安全性偏好设置中允许运行
            - 首次使用建议在设置中执行"为所有待办生成关键词"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
